{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "keyVaultName": {
        "type": "string",
        "metadata": {
          "description": "Specifies the name of the Ring 0 key vault."
        },
        "defaultValue": "edof-ring0-kv"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Specifies the location for all resources."
        }
      },
      "enableVaultForDeployment": {
        "type": "bool",
        "defaultValue": false,
        "allowedValues": [
          true,
          false
        ],
        "metadata": {
          "description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
        }
      },
      "enableVaultForTemplateDeployment": {
        "type": "bool",
        "defaultValue": false,
        "allowedValues": [
          true,
          false
        ],
        "metadata": {
          "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
        }
      },
      "tenantId": {
        "type": "string",
        "defaultValue": "[subscription().tenantId]",
        "metadata": {
          "description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Get it by using Get-AzSubscription cmdlet."
        }
      },
      "vaultSku": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [
          "Standard",
          "Premium"
        ],
        "metadata": {
          "description": "Specifies the SKU for the key vault"
        }
      },
      "logsRetentionInDays": {
        "type": "int",
        "defaultValue": 30,
        "minValue": 0,
        "maxValue": 365,
        "metadata": {
          "description": "Specifies the number of days that logs will be kept. If you do not want to apply any retention policy and retain data forever, set value to 0."
        }
      },
      "protectWithLocks": {
        "type": "string",
        "allowedValues": [
          "enabled",
          "disabled"
        ],
        "defaultValue": "disabled"
      },
      "_artifactsLocation": {
          "type": "object",
          "metadata": {
            "description": "The location of resources, such as templates and DSC modules, that the template depends on. Don't change unless you need to!"
          }
        }  
    },
    "variables": {
      "template": {
        "protectWithLocks": "[concat('nestedtemplates/protectwithlocks', parameters('protectWithLocks'), '.json')]"
      },
      "uniqueString": "[uniqueString(subscription().id, resourceGroup().id)]",
      "diagnosticStorageAccountName": "[toLower( substring( replace( concat( parameters('keyVaultName'), variables('uniqueString'), variables('uniqueString') ), '-', ''), 0, 23) )]"
    },
    "resources": [
      {
        "type": "Microsoft.KeyVault/vaults",
        "name": "[parameters('keyVaultName')]",
        "apiVersion": "2018-02-14",
        "location": "[parameters('location')]",
        "tags": {
          "displayName": "Key Vault with logging"
        },
        "properties": {
          "enabledForDeployment": "[parameters('enableVaultForDeployment')]",
          "enabledForTemplateDeployment": "[parameters('enableVaultForTemplateDeployment')]",
          "enabledForDiskEncryption": "[parameters('enableVaultForDiskEncryption')]",
          "tenantId": "[parameters('tenantId')]",
          "sku": {
            "name": "[parameters('vaultSku')]",
            "family": "A"
          }
        },
        "resources": [
          {
            "type": "Microsoft.KeyVault/vaults/providers/diagnosticsettings",
            "name": "[concat(parameters('keyVaultName'), '/Microsoft.Insights/service')]",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
              "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName'))]"
            ],
            "properties": {
              "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName'))]",
              "logs": [
                {
                  "category": "AuditEvent",
                  "enabled": true,
                  "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('LogsRetentionInDays')]"
                  }
                }
              ]
            }
          }
        ]
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('diagnosticStorageAccountName')]",
        "apiVersion": "2018-07-01",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "Storage",
        "tags": {
          "displayName": "concat('Key Vault ', parameters('keyVaultName'), ' diagnostics storage account')"
        },
        "properties": {}
      },
      {
        "type": "Microsoft.Resources/deployments",
        "name": "protectWithLocks",
        "apiVersion": "2018-05-01",
        "dependsOn": [
          "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName'))]"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation').rootUrl, concat(variables('template').protectWithLocks))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[parameters('keyVaultName')]"
            },
            "diagnosticStorageAccountName": {
              "value": "[variables('diagnosticStorageAccountName')]"
            }
          }
        }
      }
    ],
    "outputs": {}
  }